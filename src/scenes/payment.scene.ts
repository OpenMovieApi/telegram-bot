import { Action, Ctx, Scene } from 'nestjs-telegraf';

import { AbstractScene } from '../abstract/abstract.scene';
import { CommandEnum } from '../enum/command.enum';
import { PaymentService } from '../payment/payment.service';
import { PaymentSystemEnum } from 'src/payment/enum/payment-system.enum';
import { Context } from 'src/interfaces/context.interface';
import { Markup } from 'telegraf';

@Scene(CommandEnum.PAYMENT)
export class PaymentScene extends AbstractScene {
  constructor(private readonly paymentService: PaymentService) {
    super();
  }

  @Action(CommandEnum.PAY_WITH_CRYPTOMUS)
  async payWithCriptomus(@Ctx() ctx: Context) {
    const { paymentMonths, tariffId } = ctx.session;

    const paymentSystem = PaymentSystemEnum.CYPTOMUS;
    const payment = await this.paymentService.createPayment(
      ctx.from.id,
      ctx.chat.id,
      tariffId,
      paymentSystem,
      paymentMonths,
    );
    await ctx.reply(
      `–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞–º–∏ —Ç–∞—Ä–∏—Ñ–∞, –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –æ–ø–ª–∞—Ç–∏—Ç–µ, —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∞–º –ø–æ–º–µ–Ω—è—é —Ç–∞—Ä–∏—Ñ.`,
      Markup.inlineKeyboard([[Markup.button.url('üëâ –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', payment.url)]]),
    );
  }
}
